# deploy.yml

name: Deploy Node.js App to ECR

on:
  push: 
   branches: 
     - 'master'

jobs:
    build:
       name: Build Image
       runs-on: ubuntu-latest
       
       steps:
           - name: Check out code
             uses: actions/checkout@v2 # deploy.yml

           - name: Configure AWS credentials
             uses: aws-actions/configure-aws-credentials@v1
             with:
                   aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID}}
                   aws-secret-access-key: ${{vars.AWS_SECRET_ACCESS_KEY}}
                   aws-region:  ${{vars.AWS_REGION}}
           
           # deploy.yml
           - name: Login to Amazon ECR
             id: login-ecr
             uses: aws-actions/amazon-ecr-login@v1
           - name: Get commit hash
             id: commit_hash
             run: echo "hash=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
           - name: Get timestamp
             id: timestamp
             run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
           # deploy.yml
           - name: Build, tag, and push image to Amazon ECR
             env:
               ECR_REGISTRY: 259722649738.dkr.ecr.eu-north-1.amazonaws.com
               ECR_REPOSITORY: ecr_cicd_repo
               IMAGE_TAG: ${{ steps.commit_hash.outputs.hash }}-${{ steps.timestamp.outputs.timestamp }}
             run: |
               docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
               docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       outputs:
         image_tag: ${{ steps.commit_hash.outputs.hash }}-${{ steps.timestamp.outputs.timestamp }}
    deploy:
       runs-on: ubuntu-latest
      #  if: ${{ github.ref == 'refs/heads/main' }}
       needs: [build]
       steps:
         - name: Checkout code
           uses: actions/checkout@v4
         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: us-east-1
         - name: Login to Amazon ECR
           id: login-ecr
           uses: aws-actions/amazon-ecr-login@v1
         - name: copy file via ssh key
           uses: appleboy/scp-action@v0.1.7
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USERNAME }}
             key: ${{ secrets.KEY }}
             source: "Dockerfile"
             target: .
         - name: run docker-build
           uses: appleboy/ssh-action@v1.0.0
           with:
             host: ${{ secrets.HOST }}
             username: ${{ secrets.USERNAME }}
             key: ${{ secrets.KEY }}
             script: |
               aws ecr get-login-password | sudo docker login -u AWS --password-stdin "https://$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.eu-north-1.amazonaws.com"
               sudo docker rm -v -f $(docker ps -qa)
               sudo docker rmi -f $(docker images -aq)
               sudo docker run $(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.eu-north-1.amazonaws.com/ecr_cicd_repo:${{needs.build.outputs.image_tag}}
               
